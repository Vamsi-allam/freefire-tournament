spring.application.name=demo
# Bind to Render's provided PORT if present; fallback to 8082 locally
server.port=${PORT:8080}
server.servlet.context-path=/

spring.datasource.url=${DB_URL:}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

spring.flyway.enabled=false
spring.flyway.clean-disabled=true

business.upi.vpa=${BUSINESS_UPI_VPA:}
business.upi.name=${BUSINESS_UPI_NAME:}

spring.mail.host=smtpout.secureserver.net
spring.mail.port=465
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtpout.secureserver.net
spring.mail.properties.mail.debug=false


# Enable async support
spring.task.execution.pool.core-size=2
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=100
spring.task.scheduling.pool.size=2

# Keep logs quiet in console; show only warnings/errors by default
logging.level.root=WARN
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.org.springframework.boot.autoconfigure.jdbc=ERROR
logging.level.com.zaxxer.hikari=WARN
logging.level.org.springframework.mail=ERROR
logging.level.com.example.demo.service.EmailService=WARN
logging.level.com.example.demo.service.WithdrawalOtpService=WARN
logging.level.org.springframework.scheduling=WARN


# Multipart upload limits (allow up to ~5MB per file and request)
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=6MB

# JWT configuration (read from env or properties)
app.jwt.secret=${JWT_SECRET:}
app.jwt.expiration=${JWT_EXPIRATION:3600000}


app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:*}

# --- Database pool tuning for Supabase/Neon pooler ---
# Keep pool well below the Neon/Supabase pooler limit to avoid "max clients reached" in Session mode
spring.datasource.hikari.pool-name=HikariPool-PrimeArena
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=15000
# Keep connections short-lived to play nice with serverless compute and poolers
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=120000
spring.datasource.hikari.keepalive-time=30000
# Detect potential connection leaks in development
spring.datasource.hikari.leak-detection-threshold=20000

# Release connections faster (prevents long-held connections during web views)
spring.jpa.open-in-view=false

app.admin.emails=${APP_ADMIN_EMAILS:}

# --- HTTP response compression to reduce payload size ---
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.compression.min-response-size=1024